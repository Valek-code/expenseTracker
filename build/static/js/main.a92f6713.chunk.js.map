{"version":3,"sources":["components/Header.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransactionForm.js","App.js","index.js"],"names":["Header","Balance","transactions","newBal","map","t","amount","id","IncomeExpenses","newInc","newExp","className","Math","abs","Transaction","setTransactions","text","onClick","e","preventDefault","elementToRemove","indexOf","find","element","splice","TransactionList","undefined","length","name","AddTransactionForm","useState","setAmount","setName","htmlFor","type","value","placeholder","onChange","target","parseInt","alert","newTransaction","push","App","dummyData","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a92f6713.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../App.css';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <div>\r\n            <h2>Expense tracker</h2>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Balance({transactions}) {\r\n    let newBal = 0\r\n    return (\r\n        <>\r\n            {transactions.map((t) => {\r\n                newBal+=t.amount\r\n            })}\r\n            <h4>Total balance: </h4>\r\n            <h1 id=\"balance\">${newBal}</h1>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function IncomeExpenses({transactions}) {\r\n    \r\n    let newInc = 0\r\n    let newExp = 0\r\n    \r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            \r\n            {transactions.map(t =>{\r\n                if(t.amount <= 0){\r\n                    newExp += t.amount\r\n                }else\r\n                    newInc += t.amount\r\n            })}\r\n            \r\n            <div>\r\n                <h4>Income</h4>\r\n                <p id=\"money-plus\" className=\"money plus\">+${newInc}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expenses</h4>\r\n                <p id=\"money-minus\" className=\"money minus\">-${Math.abs(newExp)}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Transaction({id,setTransactions, transactions, text, amount}) {\r\n    return (\r\n        <div>\r\n        \r\n            {amount <= 0 ? <li className=\"minus\">\r\n                {text} <span>{amount}</span><button className=\"delete-btn\" onClick={(e) => {\r\n                    e.preventDefault()\r\n                    let elementToRemove = transactions.indexOf(transactions.find(element => element.id == id))\r\n                    transactions.splice(elementToRemove, 1)\r\n                    setTransactions([...transactions])\r\n                }}>X</button>\r\n            </li> : <li className=\"plus\">\r\n                {text} <span>+{amount}</span><button className=\"delete-btn\" onClick={(e) => {\r\n                    e.preventDefault()\r\n                    let elementToRemove = transactions.indexOf(transactions.find(element => element.id == id))\r\n                    transactions.splice(elementToRemove, 1)\r\n                    setTransactions([...transactions])\r\n                }}>X</button>\r\n            </li> }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport Transaction from './Transaction'\r\n\r\nexport default function TransactionList({transactions, setTransactions}) {\r\n    \r\n    return (\r\n        <>\r\n        \r\n            <ul id=\"list\" className=\"list\">\r\n                \r\n                {transactions === undefined || transactions.length == 0 ? <h2>No transactions.. Add one!</h2> :transactions.map((t) => {\r\n                    \r\n                    return <Transaction id={t.id} transactions={transactions} setTransactions={setTransactions} key={t.id} text={t.name} amount={t.amount}/>\r\n                    \r\n                })} \r\n            </ul>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport {Alert} from '@material-ui/core'\r\n\r\nexport default function AddTransactionForm({transactions, setTransactions}) {\r\n    const [amount, setAmount] = useState(0)\r\n    const [name, setName] = useState(\"\")\r\n\r\n    return (\r\n        <>\r\n            <h3>Add new transaction</h3>\r\n            <form id=\"form\">\r\n                <div className=\"form-control\">\r\n                <label htmlFor=\"text\">Expense name:</label>\r\n                <input type=\"text\" id=\"text\" value={name} placeholder=\"Enter text...\" onChange={(e) => {\r\n                    setName(e.target.value)\r\n                }} />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                <label htmlFor=\"amount\"\r\n                    >Amount <br />\r\n                    (negative - expense, positive - income)</label>\r\n                <input type=\"number\" id=\"amount\" placeholder=\"Enter amount...\" value={amount} onChange={(e) => {\r\n                    setAmount(parseInt(e.target.value))\r\n                }}  />\r\n                </div>\r\n                <button className=\"btn\" onClick={(e) => {\r\n                    \r\n                    e.preventDefault()\r\n                    if(name == '') return alert('Must have a name')\r\n                    if(name.length <= 2) return alert('Must have a longer name')\r\n                    if(amount == 0) return alert(\"Can't make a transaction with 0$!\")\r\n                    let lastID = transactions[transactions.length-1].id\r\n                    \r\n                    const newTransaction = {id:lastID+1,name, amount}\r\n                    \r\n                    transactions.push(newTransaction)\r\n                    setTransactions([...transactions])\r\n                }}>Add transaction</button>\r\n            </form>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import './App.css';\nimport Header from './components/Header'\nimport Balance from './components/Balance'\nimport IncomeExpenses from './components/IncomeExpenses';\nimport TransactionList from './components/TransactionList';\nimport AddTransactionForm from './components/AddTransactionForm';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n\n  const [transactions, setTransactions] = useState([])\n\n  const dummyData = [\n\n    {\n\n      id: 0,\n      name: 'Clothing', \n      amount: -100\n\n    },\n    {\n\n      id: 1,\n      name: 'Food', \n      amount: -100\n\n    },\n    {\n\n      id: 2,\n      name: 'Movies', \n      amount: 50\n\n    },\n\n  ]\n\n\n  useEffect(() => {\n  \n    setTransactions([...dummyData])\n  \n  },[])\n\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"container\">\n\n        <Balance transactions={transactions} />\n        <IncomeExpenses transactions={transactions}/>\n        <TransactionList transactions={transactions} setTransactions={setTransactions} />\n        <AddTransactionForm transactions={transactions} setTransactions={setTransactions} />\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}